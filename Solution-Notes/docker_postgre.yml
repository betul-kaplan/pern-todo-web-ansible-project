--- # this is not mandotory but it show us ,this is a playbook
- name: configure postgre instance
  hosts: _ansible_postgresql #ansible-inventory --graph ***this command shows all servers name.
  become: true
  vars_files:
    - secret.yml
  tasks:
    - name: update all packeges
      ansible.builtin.yum: #we can use shell module also . sudo yum update . 
        name: "*"  # in ansible yum module doc in parameters "name", "*" means: "When using state=latest, this can be '*' which means run yum -y update."
        state: latest

    - name: remove old docker packeges
      ansible.builtin.yum:
        name: 
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed  

    - name: install yum utils    
      ansible.builtin.yum:
        name: "yum-utils"
        state: latest

    - name: add docker repo    
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo    # find "ansible.builtin.get_url " module example in ansible doc
      
    - name: install docker
      ansible.builtin.package:
        name: docker-ce
        state: latest

    - name: Add user ec2-user to docker group
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes  # this is very important. Because  "append: yes"  add the user to group whitout substacting from other groups.  

    - name: Start Docker service
      ansible.builtin.service: # you can use shell module also
        name: docker
        state: started
        enabled: yes         
        
    - name: Copy files to postgresql node
      ansible.builtin.copy:
        src: /home/ec2-user/ansible/ansible-project/postgres/ # slash(/) in the end of the path is important. It sends "inside the folder"
        dest: /home/ec2-user/postgresql   

    - name: remove cw_postgre container
      community.docker.docker_container:
        name: cw_postgre
        state: absent 
        force_kill: true # it removes running containers also. 

    - name: remove clarusway/postgre image
      community.docker.docker_image:  
        name: clarusway/postgre
        state: absent

    - name: build docker image 
      community.docker.docker_image:
        name: clarusway/postgre
        build: 
          path: /home/ec2-user/postgresql
        source: build  #Use with state=present and source=build to provide an alternate name for the Dockerfile to use when building an image.
        state: present
      register: image_info    # we can see images which is build 

    - name: print the image info #we can read register'S output with this
      ansible.builtin.debug:
        var: image_info

    - name: run postgresql docker container
      community.docker.docker_container:
        name: cw_postgre
        image: clarusway/postgre
        state: started
        ports: 
          - "5432:5432" 
        env:
          POSTGRES_PASSWORD: "{{password}}"  #"Pp123456789"
        volumes:
          - /db-data:/var/lib/postgresql/data #you can find the maunt-path in postgresql image doc 
      register: container_info 

    - name: print the container info #we can read register's output with this
      ansible.builtin.debug:
        var: container_info         

        